name: Key Finder

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build `gear-key-finder` binaries
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            file_ext: tar.xz

          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            file_ext: tar.xz

          - target: x86_64-apple-darwin
            os: macOS-latest
            file_ext: tar.xz

          - target: aarch64-apple-darwin
            os: macOS-latest
            file_ext: tar.xz

          - target: x86_64-pc-windows-msvc
            os: windows-latest
            nam: gear-nightly
            file_ext: zip

    runs-on: ${{ matrix.os }}
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: gear-tech/gear

      - name: Add macOS ARM target
        if: matrix.target == 'aarch64-apple-darwin'
        run: sed -i '' 's/"wasm32-unknown-unknown"/"aarch64-apple-darwin", "wasm32-unknown-unknown"/g' rust-toolchain.toml

      - name: Add MUSL target
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: sed -i 's/"wasm32-unknown-unknown"/"x86_64-unknown-linux-musl", "wasm32-unknown-unknown"/g' rust-toolchain.toml

      - name: List toolchains and targets
        run: |
          rustup toolchain list
          rustup target list --installed

      - name: Build
        run: >
          cargo build -p gear-key-finder --profile production
          --target ${{ matrix.target }}

      - name: Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd target/${{ matrix.target }}/production
          strip gear-key-finder || true
          XZ_OPT=-9 tar -cvJf ../../../gear-key-finder-${{ matrix.target }}.${{ matrix.file_ext }} gear-key-finder

      - name: macOS artifacts
        if: matrix.os == 'macos-latest'
        run: |
          cd target/${{ matrix.target }}/production
          strip gear-key-finder || true
          tar -cvJf ../../../gear-key-finder-${{ matrix.target }}.${{ matrix.file_ext }} gear-key-finder

      - name: Windows artifacts
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/production
          strip gear-key-finder.exe
          7z a "..\..\..\gear-key-finder-${{ matrix.target }}.${{ matrix.file_ext }}" gear-key-finder.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: ignore
          path: gear-key-finder-${{ matrix.target }}.${{ matrix.file_ext }}

  deploy:
    name: Deploy binaries
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: List artifacts
        run: |
          pwd
          ls -la artifact

      - name: Deploy
        uses: dawidd6/action-ansible-playbook@v2
        with:
          directory: ansible/builds
          playbook: upload.yml
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          options: -u ubuntu
          inventory: get.gear.rs
